if(startsWith("p")== TRUE){x <- "philips"} else {return(x)}
if(startsWith(x, "p")== TRUE){x <- "philips"} else {return(x)}
if(startsWith(x, "p")){x <- "philips"} else {return(x)}
x
x <- refine[,1]
x <- tolower(x)
y <- function(if(startsWith(x, "p")){x <- "philips"} else {return(x)})
lapply(x, if(startsWith(x, "p")){x <- "philips"} else {return(x)})
install.packages(c("cluster", "codetools", "foreign", "lattice", "Matrix", "mgcv", "Rcpp", "survival"))
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("stringr")
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("shiny")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
refine
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
glimpse refine
glimpse(refine) refine
glimpse(refine)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("class", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("stringi", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
glimpse(refine)
view(refine)
detach("package:utils", unload=TRUE)
library("utils", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
view(refine)
View(refine)
tolower(refine$company)
View(refine)
refine$company <- tolower(refine$company)
View(refine)
for(i in refine$company) {
if(i == "p"*)
replace(phillips, refine$company[i])
i <- i + 1
}
lapply(replace(phillips, refine$company, "p"*))
lapply(replace,phillips, refine$company, "p"*)
lapply(replace, phillips, refine$company, "p"*)
gsub("\\*s", phillips, refine$company)
gsub("\\*s", "phillips"", refine$company)
print(refine$company)
gsub("*s", "phillips"", refine$company)
gsub(*"s", "phillips"", refine$company)
gsub(\\*"s", "phillips"", refine$company)
gsub("\\*s", "phillips"", refine$company)
gsub("\\*s", "phillips", refine$company)
gsub("*s", "phillips", refine$company)
gsub("*s", "phillips", refine$company[i])
str_replace(refine$company, "*s", "phillips")
test <- refine$company
test
str_replace(test, "*s", "phillips")
str_replace(test, "s", "phillips")
str_replace(test, "s", "")
str_replace(test, "//*p//*", "*phillips")
test <- refine$company
test
str_replace(test, "//*p//*", "*phillips")
test
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
test <- refine$company
test
str_replace(test, "//*p//*", "*phillips")
str_replace(test, "//*p//*", "*phillips")
str_replace_all(test, "p", "*phillips")
str_replace_all(test, "p*", "phillips")
test <- refine$company
test
str_replace_all(test, "$s", "phillips")
str_replace_all(test, $"s", "phillips")
str_replace_all(test, "//$s", "phillips")
str_replace_all(test, "\\$s", "phillips")
if(test == "*s"){test[i] <- 1}
str_replace_all(test, ".*s.*", "phillips")
str_replace_all(refine$company, ".*s.*", "phillips")
str_replace_all(refine$company, ".*a.*", "akzo")
str_replace_all(refine$company, ".*v.*", "van houten")
str_replace_all(refine$company, ".*u.*", "unilever")
str_replace_all(refine$company, ".*z.*", "akzo")
str_replace_all(refine$company, ".*er.*", "unilever")
str_replace_all(refine$company, ".*s.*", "phillips")
str_replace_all(refine$company, ".*k.*", "akzo")
str_replace_all(refine$company, ".*ten.*", "van houten")
str_replace_all(refine$company, ".*er.*", "unilever")
refine$company <- str_replace_all(refine$company, ".*s.*", "phillips")
refine$company
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
refine$company <- str_replace_all(refine$company, ".*il.*", "phillips")
refine$company
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
str_replace_all(refine$company, ".*k.*", "akzo")
str_replace_all(refine$company, ".*ten.*", "van houten")
str_replace_all(refine$company, ".*ver.*", "unilever")
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
refine$company
View(refine)
glimpse(refine)
col(refine)
refine$Product.code...number
separate(refine, Product.code...number, c(product_code, product_number), sep = "-")
separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
refine
refine %>% separate(x, Product.code...number, c("product_code", "product_number"), sep = "-")
refine
refine <- separate(x, Product.code...number, c("product_code", "product_number"), sep = "-")
separate(x, Product.code...number, c("product_code", "product_number"), sep = "-")
separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
refine
refine$prouct_cat <- refine$product_code
refine
refine$prouct_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*q.*", "Tablet")
View(refine)
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate product code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$prouct_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*q.*", "Tablet")
View(refine)
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate product code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$product_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$prouct_cat, ".*q.*", "Tablet")
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate product code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$product_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$product_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$product_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$product_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$product_cat, ".*q.*", "Tablet")
View(refine)
View(refine)
unite(refine, full_address, address, city, country, sep = ",", remove = FALSE)
View(refine)
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate product code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$product_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$product_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$product_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$product_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$product_cat, ".*q.*", "Tablet")
#Add full address column
refine <- unite(refine, full_address, address, city, country, sep = ",", remove = FALSE)
View(refine)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate product code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$product_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$product_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$product_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$product_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$product_cat, ".*q.*", "Tablet")
#Add full address column
refine <- unite(refine, full_address, address, city, country, sep = ",", remove = FALSE)
View(refine)
if(refine$product_code == "p"){refine$product_smartphone <- 1 } else {refine$product_smartphone <- 0}
for( i in refine) {
if(refine$product_code == "p"){
refine$product_smartphone <- 1
} else {refine$product_smartphone <- 0}
}
for( i in refine) {
if(refine$product_code = "p"){
refine$product_smartphone <- 1
} else {refine$product_smartphone <- 0}
}
for( i in refine) {
if(refine$product_code == "p"){
refine$product_smartphone <- "1"
} else {refine$product_smartphone <- "0"}
}
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
for( i in refine) {
if(refine$product_smartphone == "p"){
refine$product_smartphone <- "1"
} else {refine$product_smartphone <- "0"}
}
View(refine)
refine$product_smartphone <- refine$product_code
for( i in refine) {
if(refine$product_smartphone == "p"){
refine$product_smartphone <- "1"
} else {refine$product_smartphone <- "0"}
}
warnings(
)
refine$product_smartphone <- refine$product_code
for( i in refine) {
if(refine$product_smartphone == ".*p.*"){
refine$product_smartphone <- "1"
} else {refine$product_smartphone <- "0"}
}
warnings(
)
View(refine)
refine$product_smartphone <- refine$product_code
View(refine)
for( i in refine) {
if(refine$company_philips == "phillips"){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
}
warnings(
)
View(refine)
for( i in refine) {
if((refine$company_philips == "phillips") == TRUE){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
}
warnings(
)
for( i in refine) {
if((refine$company_philips[i] == "phillips") == TRUE){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
}
warnings(
)
for( i in refine) {
if(refine$company_philips[i] == "phillips"){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
}
warnings(
)
for( i in refine) {
if(refine$company_philips[i] == "phillips"){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
i < i+1
}
warnings(
)
for( i in refine) {
if(refine$company_philips[i] = "phillips"){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
i < i+1
}
warnings(
)
for( i in refine) {
if(refine$company_philips[i] == 'phillips'){
refine$company_philips <- "1"
} else {refine$company_philips <- "0"}
i < i+1
}
warnings(
)
for( i in refine) {
if(refine$product_smartphone[i] == 'p'){
refine$product_smartphone[i] <- "1"
} else {refine$product_smartphone[i] <- "0"}
i < i+1
}
warnings(
)
for( i in refine$product_smartphone) {
for( i in refine$product_smartphone) {
if(refine$product_smartphone[i] == "p"){
refine$product_smartphone[i] <- "1"
} else {refine$product_smartphone[i] <- "0"}
i < i+1
}
warnings(
)
for( i in refine$product_smartphone) {
if(refine$product_smartphone[i] == "p"){
refine$product_smartphone[i] <- "1"
} else {refine$product_smartphone[i] <- "0"
}
i <- i+1
}
warnings(
)
for( i in refine$product_smartphone) {
if(refine$product_smartphone[i] == "p"){
refine$product_smartphone[i] <- "1"
} else {refine$product_smartphone[i] <- "0"
}
i <- i+1
}
warnings(
)
if (refine$product_smartphone[1] == p){
print("smart class")
}else{
print("rather average")
}
class(refine$product_smartphone)
identical("p", refine$product_smartphone[1])
if (identical("p", refine$product_smartphone[1])== TRUE){
print("smart class")
}else{
print("rather average")
}
for(i in refine){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings(
)
for(i in refine){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings(
)
refine <- read.csv("~/Dropbox/Springboard Foundations/DataCleaning 1/refine.csv")
#Standardize Brand Name, all lower case and philips, akzo, van houten, and unilever
refine$company <- tolower(refine$company)
refine$company <- str_replace_all(refine$company, ".*p.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*f.*", "phillips")
refine$company <- str_replace_all(refine$company, ".*k.*", "akzo")
refine$company <- str_replace_all(refine$company, ".*ten.*", "van houten")
refine$company <- str_replace_all(refine$company, ".*ver.*", "unilever")
#separate prwoduct code and product number into two columns
refine <- separate(refine, Product.code...number, c("product_code", "product_number"), sep = "-")
#add product categories p = Smartphone, v = TV, x = Laptop,	q = Tablet
refine$product_cat <- refine$product_code
refine$product_cat <- str_replace_all(refine$product_cat, ".*p.*", "Smartphone")
refine$product_cat <- str_replace_all(refine$product_cat, ".*v.*", "TV")
refine$product_cat <- str_replace_all(refine$product_cat, ".*x.*", "Laptop")
refine$product_cat <- str_replace_all(refine$product_cat, ".*q.*", "Tablet")
#Add full address column
refine <- unite(refine, full_address, address, city, country, sep = ", ", remove = FALSE)
#Add binary columns for data analysis.
#company: company_philips, company_akzo, company_van_houten and company_unilever
#product category: product_smartphone, product_tv, product_laptop and product_tablet
refine$company_philips <- refine$company
refine$company_akzo <- refine$company
refine$company_van_houton <- refine$company
refine$company_unilever <- refine$company
refine$product_smartphone <- refine$product_code
refine$product_tv <- refine$product_code
refine$product_laptop <- refine$product_code
refine$product_tablet <- refine$product_code
for(i in refine){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings(
)
View(refine)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
i <- 1
for(i in nrow(refine$product_smartphone)){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
i <- i+1
}
warnings()
View(refine)
i <- 1
for(i in 1:25){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
i <- i+1
}
warnings()
for(i in 1:25){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
i <- i+1
}
warnings()
for(i in 1:25){
if (identical("p", refine$product_smartphone[i])== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings()
for(i in 1:25){
if (identical(refine$product_smartphone[i], "p")== TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings()
for(i in 1:25){
if (identical(refine$product_smartphone[i], "p") == TRUE){
refine$product_smartphone[i] <- "1"
}else{
refine$product_smartphone[i] <- "0"
}
}
warnings()
View(refine)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
for(i in refine){
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R')
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
source('~/Dropbox/Springboard Foundations/DataCleaning 1/DW1_Refine_Prod_List.R', echo=TRUE)
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
